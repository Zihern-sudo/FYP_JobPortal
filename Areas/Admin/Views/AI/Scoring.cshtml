<div class="row g-3">
  <div class="col-lg-7">
    <div class="card shadow-sm">
      <div class="card-header bg-white fw-semibold">Weights (visual only)</div>
      <div class="card-body">
        <label class="form-label">Must-have skills</label>
        <input id="wMust" type="range" class="form-range" min="0" max="100" value="60">

        <label class="form-label mt-3">Nice-to-have skills</label>
        <input id="wNice" type="range" class="form-range" min="0" max="100" value="30">

        <label class="form-label mt-3">Years of experience</label>
        <input id="wExp" type="range" class="form-range" min="0" max="100" value="40">

        <label class="form-label mt-3">Education</label>
        <input id="wEdu" type="range" class="form-range" min="0" max="100" value="20">

        <label class="form-label mt-3">Certifications</label>
        <input id="wCert" type="range" class="form-range" min="0" max="100" value="15">

        <label class="form-label mt-3">Recency</label>
        <input id="wRec" type="range" class="form-range" min="0" max="100" value="50">

        <div class="alert alert-info mt-3 mb-0">
          Prototype only. Moving sliders just changes the preview on the right.
        </div>
      </div>
    </div>
  </div>

  <div class="col-lg-5">
    <div class="card shadow-sm">
      <div class="card-header bg-white fw-semibold">Preview: Top 5 (reorders live)</div>
      <div class="card-body">
        <ol id="topList" class="mb-0"></ol>
        <small class="text-muted">These are mock candidates with mock features.</small>
      </div>
    </div>
  </div>
</div>

@section Scripts{
<script>
  // Mock candidate features (0–1 scale for easy maths)
  const candidates = [
    { name:"Candidate A", must:0.95, nice:0.40, exp:0.50, edu:0.60, cert:0.10, rec:0.80 },
    { name:"Candidate B", must:0.90, nice:0.55, exp:0.65, edu:0.50, cert:0.20, rec:0.70 },
    { name:"Candidate C", must:0.80, nice:0.70, exp:0.45, edu:0.55, cert:0.30, rec:0.65 },
    { name:"Candidate D", must:0.75, nice:0.35, exp:0.80, edu:0.45, cert:0.15, rec:0.60 },
    { name:"Candidate E", must:0.85, nice:0.45, exp:0.55, edu:0.40, cert:0.40, rec:0.50 },
    { name:"Candidate F", must:0.70, nice:0.60, exp:0.35, edu:0.70, cert:0.25, rec:0.85 }
  ];

  const els = {
    wMust: document.getElementById("wMust"),
    wNice: document.getElementById("wNice"),
    wExp : document.getElementById("wExp"),
    wEdu : document.getElementById("wEdu"),
    wCert: document.getElementById("wCert"),
    wRec : document.getElementById("wRec"),
    list : document.getElementById("topList")
  };

  function updatePreview(){
    // Grab weights and normalise to sum 1 (so scores look like 0–100)
    const w = {
      must:+els.wMust.value, nice:+els.wNice.value, exp:+els.wExp.value,
      edu:+els.wEdu.value, cert:+els.wCert.value, rec:+els.wRec.value
    };
    const sum = Object.values(w).reduce((a,b)=>a+b,0) || 1;
    for (const k in w) w[k] = w[k]/sum;

    const ranked = candidates.map(c=>{
      const score =
        c.must*w.must + c.nice*w.nice + c.exp*w.exp +
        c.edu*w.edu + c.cert*w.cert + c.rec*w.rec;
      return { ...c, score: Math.round(score*100) };
    }).sort((a,b)=>b.score-a.score).slice(0,5);

    els.list.innerHTML = ranked
      .map(r=>`<li>${r.name} — <span class="fw-semibold">Score ${r.score}</span></li>`)
      .join("");
  }

  // Wire sliders
  ["wMust","wNice","wExp","wEdu","wCert","wRec"].forEach(id=>{
    els[id].addEventListener("input", updatePreview);
  });

  updatePreview(); // initial render
</script>
}
