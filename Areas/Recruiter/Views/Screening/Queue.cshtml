@{
  var items = ViewBag.Items as List<CandidateItem>;
}
<div class="d-flex justify-content-between align-items-center mb-2">
  <div class="fw-semibold">AI-sorted applicants</div>
  <div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" id="blind">
    <label class="form-check-label" for="blind">Blind mode</label>
  </div>
</div>
<div id="blindNote" class="text-muted small mb-2" style="display:none">Blind mode is ON — candidate names are hidden.</div>

<div class="card shadow-sm">
  <div class="card-body p-0">
    <div class="table-responsive">
      <table class="table table-sm mb-0 align-middle" id="candTable">
        <thead>
          <tr>
            <th>Candidate</th>
            <th>Score <span class="text-muted" data-bs-toggle="tooltip" title="Prototype: AI weights (skills, experience, recency) produce this score.">?</span></th>
            <th>Confidence</th>
            <th>Applied</th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          @foreach (var c in items!.OrderByDescending(x=>x.Score))
          {
            <tr>
              <td class="cand-name">@c.Name</td>
              <td><span class="score">@c.Score</span></td>
              <td>
                @if (c.LowConfidence) { <span class="badge text-bg-warning">Low</span> } else { <span class="badge text-bg-success">High</span> }
              </td>
              <td>@c.AppliedAt</td>
              <td class="text-end">
                <a class="btn btn-sm btn-outline-secondary" asp-area="Recruiter" asp-controller="Screening" asp-action="Parsing" asp-route-candidateId="@c.Id">Review parse</a>
              </td>
            </tr>
          }
        </tbody>
      </table>
    </div>
  </div>
</div>

@section Scripts{
<script>
  // Tooltips
  const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
  tooltipTriggerList.map(el => new bootstrap.Tooltip(el));

  // Blind mode: hide names on toggle
  const blind = document.getElementById('blind');
  const note  = document.getElementById('blindNote');
  const cells = () => document.querySelectorAll('.cand-name');
  const mask = n => "Candidate " + hash(n).toString().slice(-3);
  function hash(s){ var h=0,i,chr; for(i=0;i<s.length;i++){ chr=s.charCodeAt(i); h=((h<<5)-h)+chr; h|=0; } return Math.abs(h); }

  blind.addEventListener('change', e=>{
    cells().forEach(td=>{
      if (blind.checked) td.dataset.real=td.textContent, td.textContent="Hidden • " + mask(td.textContent);
      else if (td.dataset.real) td.textContent=td.dataset.real;
    });
    note.style.display = blind.checked ? '' : 'none';
    showToast(blind.checked ? "Blind mode on" : "Blind mode off", "secondary");
  });
</script>
}
